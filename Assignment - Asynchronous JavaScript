Question 1 


HTML CODE <br>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Countdown Timer</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin-top: 50px;
        }
        #timer-display {
            font-size: 48px;
            margin: 20px 0;
        }
        .controls {
            margin: 10px 0;
        }
        .controls button {
            padding: 10px 20px;
            margin: 5px;
            font-size: 16px;
            cursor: pointer;
        }
        .input-fields input {
            width: 50px;
            padding: 5px;
            font-size: 16px;
            text-align: center;
        }
    </style>
</head>
<body>
    <h1>Countdown Timer</h1>
    <div class="input-fields">
        <input type="number" id="minutes" placeholder="MM" min="0">
        <input type="number" id="seconds" placeholder="SS" min="0" max="59">
    </div>
    <div id="timer-display">00:00</div>
    <div class="controls">
        <button id="start-btn">Start</button>
        <button id="pause-btn">Pause</button>
        <button id="reset-btn">Reset</button>
    </div>
    <script src="script.js"></script>
</body>
</html>


JAVASCRIPT CDOE
let timerInterval; // Variable to store the interval ID
let totalSeconds = 0; // Total time in seconds
let isPaused = false; // Flag to track pause state

// DOM Elements
const minutesInput = document.getElementById('minutes');
const secondsInput = document.getElementById('seconds');
const timerDisplay = document.getElementById('timer-display');
const startButton = document.getElementById('start-btn');
const pauseButton = document.getElementById('pause-btn');
const resetButton = document.getElementById('reset-btn');

// Function to update the timer display
function updateDisplay(seconds) {
    const mins = Math.floor(seconds / 60);
    const secs = seconds % 60;
    timerDisplay.textContent = `${String(mins).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;
}

// Function to start the countdown
function startTimer() {
    if (!isPaused) {
        const minutes = parseInt(minutesInput.value) || 0;
        const seconds = parseInt(secondsInput.value) || 0;
        totalSeconds = minutes * 60 + seconds;
    }

    if (totalSeconds <= 0) {
        alert("Please enter a valid time.");
        return;
    }

    isPaused = false;
    clearInterval(timerInterval); // Clear any existing intervals
    timerInterval = setInterval(() => {
        if (totalSeconds > 0) {
            totalSeconds--;
            updateDisplay(totalSeconds);
        } else {
            clearInterval(timerInterval);
            alert("Time's up!");
        }
    }, 1000);
}

// Function to pause the countdown
function pauseTimer() {
    isPaused = true





Qustion 2

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Fetch Data with Promises</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin: 50px;
        }
        #data {
            margin-top: 20px;
            font-size: 1.2em;
            border: 1px solid #ccc;
            padding: 20px;
            border-radius: 5px;
            display: inline-block;
            max-width: 600px;
            word-wrap: break-word;
        }
        .error {
            color: red;
        }
    </style>
</head>
<body>
    <h1>Fetch Data from Public API</h1>
    <button id="fetchData">Fetch Random Dog Image</button>
    <div id="data">Click the button to fetch data.</div>

    <script src="fetch-data.js"></script>
</body>
</html>


JAvascript code
// DOM Elements
const fetchDataButton = document.getElementById("fetchData");
const dataContainer = document.getElementById("data");

// Function to fetch data from the Dog API
function fetchDogImage() {
    const apiUrl = "https://dog.ceo/api/breeds/image/random";

    // Update the UI to show loading
    dataContainer.innerHTML = "Loading...";

    // Fetch data from the API
    fetch(apiUrl)
        .then((response) => {
            if (!response.ok) {
                throw new Error(`Error: ${response.status} ${response.statusText}`);
            }
            return response.json();
        })
        .then((data) => {
            // Display the fetched image
            dataContainer.innerHTML = `
                <p>Here is a random dog image:</p>
                <img src="${data.message}" alt="Random Dog" style="max-width: 100%; border-radius: 5px;">
            `;
        })
        .catch((error) => {
            // Handle and display errors
            dataContainer.innerHTML = `
                <p class="error">Failed to fetch data. ${error.message}</p>
            `;
        });
}

// Attach the event listener to the button
fetchDataButton.addEventListener("click", fetchDogImage);
